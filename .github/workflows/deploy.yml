name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        run: |
          docker login -u harsh43431101@gmail.com -p ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t funning-nextjs-app:latest .
          docker push funning-nextjs-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to server
        run: |
          ssh user@your-server "
            # Stop and remove old container if it exists
            docker ps -q --filter 'ancestor=funning-nextjs-app' | xargs -r docker stop | xargs -r docker rm;
            
            # Remove old image locally to free space
            docker images 'funning-nextjs-app' -q | xargs -r docker rmi;
            
            # Pull new image and run new container
            docker pull funning-nextjs-app:$GITHUB_SHA;
            docker run -d --name funning-nextjs-app-container funning-nextjs-app:$GITHUB_SHA
          "
          
      - name: Remove old image from Docker Hub (optional)
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          # List all images and delete old ones from Docker Hub
          # Here you should customize logic to identify old images based on your tagging scheme
          # Example: Deleting images older than the current image
          docker image ls --filter 'dangling=true' -q | xargs -r docker rmi
